name: mmx
version: '0.1'
services:

  api:
    build: ./dockers/api
    ports:
      - 20410:8002
    networks:
    - node-network
    volumes:
      - type: bind
        source: ./dockers/api
        target: /mmx_app
      - type: bind
        source: ./mmx
        target: /mmx_app/mmx
    secrets:
      - mongodb_url
    command: sh -c "gunicorn --env MONGODB_URL=${MONGODB_URL} --bind 0.0.0.0:8002 wsgi"


  feat_extract:
    build: ./dockers/feat_extract
    ports:
      - 8001:8001
    networks:
    - node-network
    volumes:
      - type: bind
        source: ./dockers/feat_extract
        target: /mmx_app
      - type: bind
        source: ./mmx/
        target: /mmx_app/mmx/
    secrets:
      - mongodb_url
    command: sh -c "watchmedo auto-restart -p \"*.py\" -d . -d mmx -- python server.py"


  scrape:
    build: ./dockers/scrape
    depends_on:
      - feat_extract
    networks:
    - node-network
    volumes:
      - type: bind
        source: ./dockers/scrape
        target: /mmx_app/
      - type: bind
        source: ./mmx/
        target: /mmx_app/mmx/
      - type: bind
        source: ./img
        target: /mmx_app/img
    secrets:
      - mongodb_url
    environment:
      - MONGODB_URL
      - SCRAPE_RUN_MODE
      - SCRAPE_JOB_INTERVAL

    command: sh -c "bash run.sh"

  nginx:
    build: ./dockers/nginx
    image: faizanbashir/webserver:latest
    restart: unless-stopped
    tty: true
    ports:
#      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/etc/nginx
    depends_on:
      - api
    networks:
      - node-network
    command: sh -c "nginx -g \"daemon off;\""

volumes:
  nginxdata:
    driver: local

networks:
  node-network:
    driver: bridge

secrets:
  mongodb_url:
    file : ./mongodb_url

